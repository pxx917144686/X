name: 构建未签名IPA

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build_unsigned:
    name: 构建未签名IPA
    runs-on: macos-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 设置Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: 安装必要工具
        run: |
          brew install ldid
      
      - name: 创建必要的空目录结构
        run: |
          # 创建在Makefile中引用的所有子项目目录
          mkdir -p BaseBin/ChOma
          mkdir -p BaseBin/XPF
          mkdir -p BaseBin/MachOMerger
          mkdir -p BaseBin/opainject
          mkdir -p BaseBin/libjailbreak
          mkdir -p BaseBin/systemhook
          mkdir -p BaseBin/forkfix
          mkdir -p BaseBin/launchdhook
          mkdir -p BaseBin/boomerang
          mkdir -p BaseBin/jbctl
          mkdir -p BaseBin/idownloadd
          mkdir -p BaseBin/watchdoghook
          mkdir -p BaseBin/rootlesshooks
          mkdir -p BaseBin/dyldhook
          
          # 在每个目录中创建最小的Makefile
          for dir in BaseBin/{ChOma,XPF,MachOMerger,opainject,libjailbreak,systemhook,forkfix,launchdhook,boomerang,jbctl,idownloadd,watchdoghook,rootlesshooks,dyldhook}; do
            echo "clean:" > $dir/Makefile
            echo "	@echo 'Cleaned \$$(basename \$$(pwd))'" >> $dir/Makefile
          done
          
          # 创建_external目录结构
          mkdir -p BaseBin/_external/basebin
          mkdir -p BaseBin/_external/include
          mkdir -p BaseBin/_external/lib
          touch [.version](http://_vscodecontentref_/0)
      
      - name: 准备资源文件
        run: |
          mkdir -p bootstrap/{usr/bin,usr/lib,basebin}
          touch bootstrap/usr/bin/{bash,dpkg}
          touch [libc.dylib](http://_vscodecontentref_/1)
          tar -cf [bootstrap.tar](http://_vscodecontentref_/2) -C bootstrap .
      
      - name: 构建IPA
        run: |
          # 直接构建应用，不执行make clean
          make -C Application
          # 或者也可以尝试:
          # cd Application && xcodebuild -project X.xcodeproj -scheme X -configuration Release
          
          # 检查生成的IPA
          if [ -f "Application/X.tipa" ]; then
            mkdir -p $RUNNER_TEMP/build
            cp Application/X.tipa $RUNNER_TEMP/build/X.ipa
          else
            echo "构建失败: 未找到X.tipa文件"
            exit 1
          fi
      
      # 其余步骤保持不变...
