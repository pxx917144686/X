import UIKit
import Foundation

// 漏洞类型枚举
enum ExploitType: String, CaseIterable, Identifiable {
    case webkitUAF           // CVE-2024-44131 WebKit UAF
    case coreMediaUAF        // CVE-2025-24085 CoreMedia UAF
    case kernelTypeConfusion // CVE-2024-23222 内核类型混淆
    case vmBehaviorZero      // VM_BEHAVIOR_ZERO_WIRED_PAGES
    case fileZero = "File Zero 漏洞"
    
    var id: String { self.rawValue }
    
    var displayName: String {
        switch self {
        case .webkitUAF:
            return "WebKit UAF (CVE-2024-44131)"
        case .coreMediaUAF:
            return "CoreMedia UAF (CVE-2025-24085)"
        case .kernelTypeConfusion:
            return "内核类型混淆 (CVE-2024-23222)"
        case .vmBehaviorZero:
            return "VM行为清零 (VM_BEHAVIOR_ZERO_WIRED_PAGES)"
        case .fileZero:
            return "File Zero 漏洞"
        }
    }
    
    var description: String {
        switch self {
        case .webkitUAF:
            return "通过WebKit引擎中的UAF漏洞获取初始代码执行权限并突破浏览器沙箱"
        case .coreMediaUAF:
            return "利用CoreMedia框架中的UAF漏洞加载畸形MP4文件，突破应用沙箱"
        case .kernelTypeConfusion:
            return "使用内核类型混淆漏洞提升权限至root，绕过KPP/APRR保护"
        case .vmBehaviorZero:
            return "利用XNU内核VM子系统漏洞，清零只读系统文件"
        case .fileZero:
            return "利用文件系统漏洞获取系统权限"
        default:
            return "未知漏洞类型"
        }
    }
    
    var impactLevel: ExploitImpactLevel {
        switch self {
        case .webkitUAF:
            return .medium
        case .coreMediaUAF:
            return .high
        case .kernelTypeConfusion:
            return .critical
        case .vmBehaviorZero:
            return .high
        case .fileZero:
            return .low
        }
    }
}

// 漏洞影响级别
enum ExploitImpactLevel {
    case low, medium, high, critical
    
    var color: UIColor {
        switch self {
        case .low:
            return UIColor.systemBlue
        case .medium:
            return UIColor.systemOrange
        case .high:
            return UIColor.systemRed
        case .critical:
            return UIColor(red: 0.5, green: 0, blue: 0, alpha: 1.0) // 深红色
        }
    }
    
    var displayName: String {
        switch self {
        case .low:
            return "低"
        case .medium:
            return "中"
        case .high:
            return "高"
        case .critical:
            return "严重"
        }
    }
}